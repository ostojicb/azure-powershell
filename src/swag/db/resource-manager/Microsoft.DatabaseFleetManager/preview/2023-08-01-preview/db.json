{
  "swagger": "2.0",
  "info": {
    "version": "2023-08-01-preview",
    "title": "2023-08-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/authorizedPrincipals/{authorizedPrincipalName}": {
      "get": {
        "tags": [
          "AuthorizedPrincipals"
        ],
        "description": "Gets an authorized principal.",
        "operationId": "AuthorizedPrincipals_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizedPrincipalNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved resource information.",
            "schema": {
              "$ref": "#/definitions/AuthorizedPrincipal"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AuthorizedPrincipals_Get_MaximumSet_Gen": {
            "$ref": "./examples/AuthorizedPrincipals_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "tags": [
          "AuthorizedPrincipals"
        ],
        "description": "Creates or updates an authorized principal.",
        "operationId": "AuthorizedPrincipals_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizedPrincipalNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizedPrincipal"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the authorized principal.",
            "schema": {
              "$ref": "#/definitions/AuthorizedPrincipal"
            }
          },
          "201": {
            "description": "Successfully created the authorized principal.",
            "schema": {
              "$ref": "#/definitions/AuthorizedPrincipal"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AuthorizedPrincipals_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/AuthorizedPrincipals_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AuthorizedPrincipals"
        ],
        "description": "Deletes an authorized principal.",
        "operationId": "AuthorizedPrincipals_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizedPrincipalNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AuthorizedPrincipals_Delete_MaximumSet_Gen": {
            "$ref": "./examples/AuthorizedPrincipals_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/authorizedPrincipals": {
      "get": {
        "tags": [
          "AuthorizedPrincipals"
        ],
        "description": "Gets all authorized principals in a fleet.",
        "operationId": "AuthorizedPrincipals_ListByFleet",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of resources.",
            "schema": {
              "$ref": "#/definitions/AuthorizedPrincipalListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AuthorizedPrincipals_ListByFleet_MaximumSet_Gen": {
            "$ref": "./examples/AuthorizedPrincipals_ListByFleet_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/firewallRules/{firewallRuleName}": {
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets a firewall rule.",
        "operationId": "FirewallRules_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved resource information.",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FirewallRules_Get_MaximumSet_Gen": {
            "$ref": "./examples/FirewallRules_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "tags": [
          "FirewallRules"
        ],
        "description": "Creates or updates a firewall rule.",
        "operationId": "FirewallRules_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the firewall rule.",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "201": {
            "description": "Successfully created the firewall rule.",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FirewallRules_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/FirewallRules_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "FirewallRules"
        ],
        "description": "Deletes a firewall rule.",
        "operationId": "FirewallRules_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FirewallRules_Delete_MaximumSet_Gen": {
            "$ref": "./examples/FirewallRules_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/firewallRules": {
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets all firewall rules in a fleet.",
        "operationId": "FirewallRules_ListByFleet",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed firewall rules.",
            "schema": {
              "$ref": "#/definitions/FirewallRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FirewallRules_ListByFleet_MaximumSet_Gen": {
            "$ref": "./examples/FirewallRules_ListByFleet_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases/{databaseName}/changeTier": {
      "post": {
        "tags": [
          "Databases"
        ],
        "description": "Moves database to a different tier.",
        "operationId": "Databases_ChangeTier",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FleetspaceNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseMoveDefinition"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "headers": {
              "Location": {
                "type": "string"
              }
            },
            "description": "Accepted moving the fleet database."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Databases_ChangeTier_MaximumSet_Gen": {
            "$ref": "./examples/Databases_ChangeTier_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases/{databaseName}": {
      "get": {
        "tags": [
          "Databases"
        ],
        "description": "Gets a fleet database.",
        "operationId": "Databases_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FleetspaceNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched fleet database.",
            "schema": {
              "$ref": "#/definitions/FleetDatabase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Databases_Get_MaximumSet_Gen": {
            "$ref": "./examples/Databases_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "tags": [
          "Databases"
        ],
        "description": "Creates or updates a fleet database.",
        "operationId": "Databases_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FleetspaceNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetDatabase"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the fleet database.",
            "schema": {
              "$ref": "#/definitions/FleetDatabase"
            }
          },
          "201": {
            "description": "Successfully created the fleet database.",
            "schema": {
              "$ref": "#/definitions/FleetDatabase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Databases_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/Databases_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Databases"
        ],
        "description": "Deletes a fleet database.",
        "operationId": "Databases_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FleetspaceNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Deleting the fleet database.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The specified fleet database does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Databases_Delete_MaximumSet_Gen": {
            "$ref": "./examples/Databases_Delete_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Databases"
        ],
        "description": "Updates a fleet database.",
        "operationId": "Databases_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FleetspaceNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetDatabase"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the fleet database.",
            "schema": {
              "$ref": "#/definitions/FleetDatabase"
            }
          },
          "202": {
            "headers": {
              "Location": {
                "type": "string"
              }
            },
            "description": "Updating the fleet database."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Databases_Update_MaximumSet_Gen": {
            "$ref": "./examples/Databases_Update_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases": {
      "get": {
        "tags": [
          "Databases"
        ],
        "description": "Gets all fleet databases in a fleetspace.",
        "operationId": "Databases_ListByFleetspace",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FleetspaceNameParameter"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of elements in the collection to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of elements to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that filters elements in the collection.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An opaque token that identifies a starting point in the collection.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved databases in fleetspace.",
            "schema": {
              "$ref": "#/definitions/FleetDatabaseListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-odata": "#/definitions/FleetDatabaseFilterParameters",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Databases_ListByFleetspace_MaximumSet_Gen": {
            "$ref": "./examples/Databases_ListByFleetspace_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets": {
      "get": {
        "tags": [
          "Fleets"
        ],
        "description": "Gets all fleets in a resource group.",
        "operationId": "Fleets_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched fleets in resource group.",
            "schema": {
              "$ref": "#/definitions/FleetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleets_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/Fleets_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}": {
      "get": {
        "tags": [
          "Fleets"
        ],
        "description": "Gets a fleet resource.",
        "operationId": "Fleets_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched fleet resource.",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleets_Get_MaximumSet_Gen": {
            "$ref": "./examples/Fleets_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "tags": [
          "Fleets"
        ],
        "description": "Creates or updates a fleet resource.",
        "operationId": "Fleets_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the fleet.",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "201": {
            "description": "Successfully created the fleet.",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleets_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/Fleets_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Fleets"
        ],
        "description": "Deletes a fleet.",
        "operationId": "Fleets_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Deleting the fleet.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Successfully deleted the fleetspace."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Fleets_Delete_MaximumSet_Gen": {
            "$ref": "./examples/Fleets_Delete_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Fleets"
        ],
        "description": "Modifies a fleet resource.",
        "operationId": "Fleets_Patch",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully patched fleet.",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleets_Patch_MaximumSet_Gen": {
            "$ref": "./examples/Fleets_Patch_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DatabaseFleetManager/fleets": {
      "get": {
        "tags": [
          "Fleets"
        ],
        "description": "Gets all fleets in a subscription.",
        "operationId": "Fleets_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all fleets in the subscription.",
            "schema": {
              "$ref": "#/definitions/FleetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleets_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/Fleets_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}": {
      "get": {
        "tags": [
          "Fleetspaces"
        ],
        "description": "Gets fleetspace resource.",
        "operationId": "Fleetspaces_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FleetspaceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched fleetspace.",
            "schema": {
              "$ref": "#/definitions/Fleetspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleetspaces_Get_MaximumSet_Gen": {
            "$ref": "./examples/Fleetspaces_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "tags": [
          "Fleetspaces"
        ],
        "description": "Creates or updates a fleetspace resource.",
        "operationId": "Fleetspaces_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FleetspaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Fleetspace"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the fleetspace.",
            "schema": {
              "$ref": "#/definitions/Fleetspace"
            }
          },
          "201": {
            "description": "Successfully created the fleetspace.",
            "schema": {
              "$ref": "#/definitions/Fleetspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleetspaces_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/Fleetspaces_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Fleetspaces"
        ],
        "description": "Deletes a fleetspace.",
        "operationId": "Fleetspaces_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FleetspaceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Deleting the fleetspace.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Successfully deleted the fleetspace."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Fleetspaces_Delete_MaximumSet_Gen": {
            "$ref": "./examples/Fleetspaces_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces": {
      "get": {
        "tags": [
          "Fleetspaces"
        ],
        "description": "Lists fleetspaces in a fleet.",
        "operationId": "Fleetspaces_ListByFleet",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched fleetspaces in a fleet.",
            "schema": {
              "$ref": "#/definitions/FleetspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleetspaces_ListByFleet_MaximumSet_Gen": {
            "$ref": "./examples/Fleetspaces_ListByFleet_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/tiers/{tierName}": {
      "get": {
        "tags": [
          "FleetTiers"
        ],
        "description": "Gets a tier resource.",
        "operationId": "FleetTiers_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/TierNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved tier resource.",
            "schema": {
              "$ref": "#/definitions/FleetTier"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FleetTiers_Get_MaximumSet_Gen": {
            "$ref": "./examples/FleetTiers_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "tags": [
          "FleetTiers"
        ],
        "description": "Creates or updates a tier.",
        "operationId": "FleetTiers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/TierNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetTier"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the tier.",
            "schema": {
              "$ref": "#/definitions/FleetTier"
            }
          },
          "201": {
            "description": "Successfully created the tier.",
            "schema": {
              "$ref": "#/definitions/FleetTier"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FleetTiers_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/FleetTiers_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/tiers": {
      "get": {
        "tags": [
          "FleetTiers"
        ],
        "description": "List tiers in a fleet.",
        "operationId": "FleetTiers_ListByFleet",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved tiers.",
            "schema": {
              "$ref": "#/definitions/FleetTierListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FleetTiers_ListByFleet_MaximumSet_Gen": {
            "$ref": "./examples/FleetTiers_ListByFleet_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/tiers/{tierName}/disable": {
      "post": {
        "tags": [
          "FleetTiers"
        ],
        "description": "Disables a tier.",
        "operationId": "FleetTiers_Disable",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/TierNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled the tier.",
            "schema": {
              "$ref": "#/definitions/FleetTier"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FleetTiers_Disable_MaximumSet_Gen": {
            "$ref": "./examples/FleetTiers_Disable_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/migrateServer": {
      "post": {
        "tags": [
          "Migrations"
        ],
        "description": "Migrates existing logical server into fleet.",
        "operationId": "Migrations_Server",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/FleetNameParameter"
          },
          {
            "$ref": "#/parameters/FleetspaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrateServerDefinition"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "headers": {
              "Location": {
                "type": "string"
              }
            },
            "description": "Started logical server migration process."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Migrations_Server_MaximumSet_Gen": {
            "$ref": "./examples/Migrations_Server_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/providers/Microsoft.DatabaseFleetManager/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet_Gen": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AuthorizedPrincipalProps": {
      "type": "object",
      "properties": {
        "applicationId": {
          "format": "uuid",
          "description": "Application Id of the authorized principal.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "objectId": {
          "format": "uuid",
          "description": "Object Id of the authorized principal.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tenantId": {
          "format": "uuid",
          "description": "Tenant Id of the authorized principal.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "principalType": {
          "description": "Principal type of the authorized principal.",
          "enum": [
            "Application"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sqlUserType": {
          "description": "SQL user type of the authorized principal. Extra: Database user, Sever: Server user, Default: Server admin",
          "enum": [
            "Default",
            "Extra",
            "Server"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SQLUserType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "role": {
          "description": "Role assigned to the authorized principal.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "AuthorizedPrincipal": {
      "description": "A database fleet manager authorized principal.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthorizedPrincipalProps"
        }
      }
    },
    "AuthorizedPrincipalListResult": {
      "description": "A list of SQL database fleet manager authorized principal.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizedPrincipal"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FirewallRuleProperties": {
      "description": "A Firewall rule properties.",
      "type": "object",
      "properties": {
        "startIpAddress": {
          "description": "Start IP address.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "endIpAddress": {
          "description": "End IP address.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "FirewallRule": {
      "description": "A SQL Database Fleet firewall rule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties"
        }
      }
    },
    "FirewallRuleListResult": {
      "description": "A list of SQL Database fleet firewall rules.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatabaseMoveDefinition": {
      "type": "object",
      "properties": {
        "targetTierName": {
          "type": "string"
        }
      }
    },
    "FleetDatabaseProperties": {
      "description": "The SQL Database Fleet properties.",
      "type": "object",
      "properties": {
        "originalDatabaseId": {
          "description": "Resource identifier for the underlying database resource.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Database state.",
          "type": "string",
          "readOnly": true
        },
        "createMode": {
          "description": "Create mode. Always default (To do, add modes).",
          "enum": [
            "Default",
            "Copy",
            "PointInTimeRestore"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DatabaseCreateMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tierName": {
          "description": "Name of the tier this database belongs to.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "connectionString": {
          "description": "Connection string to connect to the database with.",
          "type": "string",
          "readOnly": true
        },
        "recoverable": {
          "description": "If true, database is recoverable.",
          "type": "boolean",
          "readOnly": true
        },
        "restoreFromTime": {
          "format": "date-time",
          "description": "Restore from time when CreateMode is PointInTimeRestore.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "earliestRestoreTime": {
          "format": "date-time",
          "description": "Earliest restore time.",
          "type": "string",
          "readOnly": true
        },
        "latestRestoreTime": {
          "format": "date-time",
          "description": "Latest restore time.",
          "type": "string",
          "readOnly": true
        },
        "backupRetentionDays": {
          "format": "int32",
          "description": "Backup retention in days.",
          "type": "integer",
          "readOnly": true
        },
        "databaseSizeGbMax": {
          "format": "int32",
          "description": "Maximum database size in Gb.",
          "type": "integer",
          "readOnly": true
        },
        "sourceDatabaseName": {
          "description": "Source database name used when CreateMode is Copy or PointInTimeRestore.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "resourceTags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "FleetDatabase": {
      "description": "A SQL Database Fleet.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetDatabaseProperties"
        }
      }
    },
    "FleetDatabaseFilterParameters": {
      "type": "object",
      "properties": {
        "tierName": {
          "type": "string"
        }
      }
    },
    "FleetDatabaseListResult": {
      "description": "A list of SQL Database Fleets.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FleetDatabase"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FleetListResult": {
      "description": "A list of SQL Database Fleets.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fleet"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FleetProperties": {
      "description": "The SQL Database Fleet properties.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "mainPrincipal": {
          "$ref": "#/definitions/MainPrincipal",
          "description": "Main AAD principal that has admin access to all databases in the fleet.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "MainPrincipal": {
      "type": "object",
      "properties": {
        "applicationId": {
          "format": "uuid",
          "description": "Application Id of the main principal.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "objectId": {
          "format": "uuid",
          "description": "Object Id of the main principal.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tenantId": {
          "format": "uuid",
          "description": "Tenant Id of the main principal.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "principalType": {
          "description": "Principal type of the main principal.",
          "enum": [
            "Application"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "Fleet": {
      "description": "A SQL Database Fleet.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetProperties"
        }
      }
    },
    "FleetspaceProperties": {
      "description": "A Fleetspace properties.",
      "type": "object",
      "properties": {}
    },
    "Fleetspace": {
      "description": "A SQL Database Fleetspace.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetspaceProperties"
        }
      }
    },
    "FleetspaceListResult": {
      "description": "A list of SQL Database fleetspaces.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fleetspace"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FleetTierProperties": {
      "description": "A Fleet tier properties.",
      "type": "object",
      "properties": {
        "disabled": {
          "description": "If true, tier is disabled.",
          "type": "boolean",
          "readOnly": true
        },
        "serverless": {
          "description": "If true, serverless resources are provisioned in the tier.",
          "type": "boolean",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "pooled": {
          "description": "If true, databases are pooled.",
          "type": "boolean",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "serviceTier": {
          "description": "Service tier of provisioned resources, for example GeneralPurpose.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "family": {
          "description": "Family of provisioned resources, for example Gen5.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "capacity": {
          "format": "int32",
          "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
          "type": "integer",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "poolNumOfDatabasesMax": {
          "format": "int32",
          "description": "Maximum number of databases per pool.",
          "type": "integer",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "numOfEmptyPreprovisionedDatabases": {
          "format": "int32",
          "description": "Number of empty preprovisioned databases for fast database provisioning.",
          "type": "integer",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "databaseCapacityMin": {
          "format": "double",
          "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
          "type": "number",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "databaseCapacityMax": {
          "format": "double",
          "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
          "type": "number",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "databaseSizeGbMax": {
          "format": "int32",
          "description": "Maximum database size in Gb.",
          "type": "integer",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "FleetTier": {
      "description": "A SQL Database Fleet tier.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetTierProperties"
        }
      }
    },
    "FleetTierListResult": {
      "description": "A list of SQL Database fleet tiers.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FleetTier"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MigrateServerDefinition": {
      "type": "object",
      "properties": {
        "tierName": {
          "type": "string"
        },
        "sourceSubscriptionId": {
          "format": "uuid",
          "type": "string"
        },
        "sourceResourceGroupName": {
          "type": "string"
        },
        "sourceServerName": {
          "type": "string"
        },
        "destinationTierOverrides": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Subscription ID that identifies an Azure subscription.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API version to use for the request.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "FleetNameParameter": {
      "name": "fleetName",
      "in": "path",
      "description": "Name of the database fleet.",
      "required": true,
      "type": "string",
      "pattern": "^.+$",
      "x-ms-parameter-location": "method"
    },
    "FleetspaceNameParameter": {
      "name": "fleetspaceName",
      "in": "path",
      "description": "Name of the fleetspace.",
      "required": true,
      "type": "string",
      "pattern": "^.+$",
      "x-ms-parameter-location": "method"
    },
    "TierNameParameter": {
      "name": "tierName",
      "in": "path",
      "description": "Name of the tier.",
      "required": true,
      "type": "string",
      "pattern": "^.+$",
      "x-ms-parameter-location": "method"
    },
    "AuthorizedPrincipalNameParameter": {
      "name": "authorizedPrincipalName",
      "in": "path",
      "description": "Name of the authorized principal.",
      "required": true,
      "type": "string",
      "pattern": "^.+$",
      "x-ms-parameter-location": "method"
    },
    "FirewallRuleNameParameter": {
      "name": "firewallRuleName",
      "in": "path",
      "description": "Name of the firewall rule.",
      "required": true,
      "type": "string",
      "pattern": "^.+$",
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "description": "Name of the database.",
      "required": true,
      "type": "string",
      "pattern": "^.+$",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}